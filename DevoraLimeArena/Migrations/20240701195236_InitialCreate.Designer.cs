// <auto-generated />
using DevoraLimeArena.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DevoraLimeArena.Migrations
{
    [DbContext(typeof(ArenaDBContext))]
    [Migration("20240701195236_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("DevoraLimeArena.DB.Entities.ArenaEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ArenaEntities");
                });

            modelBuilder.Entity("DevoraLimeArena.DB.Entities.FighterEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArenaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ArenaId");

                    b.ToTable("FighterEntities");
                });

            modelBuilder.Entity("DevoraLimeArena.DB.Entities.History", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ArenaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("AttackerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("DefenderName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("FinalHealthAttacker")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FinalHealthDefender")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HealthChangeAttacker")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HealthChangedDefender")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAttackerDead")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDefenderDead")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoundNr")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ArenaId");

                    b.ToTable("FightRoundEntities");
                });

            modelBuilder.Entity("DevoraLimeArena.DB.Entities.FighterEntity", b =>
                {
                    b.HasOne("DevoraLimeArena.DB.Entities.ArenaEntity", "Arena")
                        .WithMany("Fighters")
                        .HasForeignKey("ArenaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Arena");
                });

            modelBuilder.Entity("DevoraLimeArena.DB.Entities.History", b =>
                {
                    b.HasOne("DevoraLimeArena.DB.Entities.ArenaEntity", "Arena")
                        .WithMany("History")
                        .HasForeignKey("ArenaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Arena");
                });

            modelBuilder.Entity("DevoraLimeArena.DB.Entities.ArenaEntity", b =>
                {
                    b.Navigation("Fighters");

                    b.Navigation("History");
                });
#pragma warning restore 612, 618
        }
    }
}
